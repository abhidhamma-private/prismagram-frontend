{"version":3,"sources":["Styles/GlobalStyles.js","Styles/Theme.js","Components/Input.js","Components/Button.js","Routes/Auth/AuthPresenter.js","Hooks/useInput.js","Routes/Auth/AuthQueries.js","Routes/Auth/index.js","Routes/Auth/AuthContainer.js","Routes/Feed.js","Components/Router.js","Components/App.js","Apollo/LocalState.js","Apollo/Client.js","index.js"],"names":["createGlobalStyle","reset","props","theme","bgColor","blackColor","blueColor","darkGreyColor","lightGreyColor","redColor","darkBlueColor","boxBorder","borderRadius","whiteBox","primaryColor","primaryColorInverted","ActiveColor","INDIGO","DEEPORANGE","AMBER","PURPLE","BLUE","TEAL","Container","styled","input","Input","placeholder","required","value","onChange","type","button","Button","text","Wrapper","div","Box","StateChanger","Link","span","Form","action","userName","firstName","lastName","email","setAction","onSubmit","secret","onClick","defaultValue","useState","setValue","e","target","LOG_IN","gql","CREATE_ACCOUNT","CONFIRM_SECRET","LOCAL_LOG_IN","AuthContainer","useInput","useMutation","variables","requestSecretMutation","createAccountMutation","confirmSecretMutation","localLogInMutation","AuthPresenter","a","async","preventDefault","data","requestSecret","toast","success","error","setTimeout","console","log","createAccount","message","token","confirmSecret","undefined","Error","Feed","Text","LoggedInRoutes","exact","path","component","LoggedOutRoutes","Auth","AppRouter","isLoggedIn","QUERY","defaults","Boolean","localStorage","getItem","resolvers","Mutation","logUserIn","_","cache","setItem","writeData","logUserOut","__","removeItem","window","location","ApolloClient","uri","clientState","ReactDOM","render","client","useQuery","Theme","GlobalStyles","Router","position","POSITION","BOTTOM_LEFT","document","getElementById"],"mappings":"w0BAGeA,kCAAf,IACMC,KAMqB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,WAChC,SAAAF,GAAK,OAAIA,EAAMC,MAAME,cAKrB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,aCbtB,GACbF,QAAS,UACTC,WAAY,UACZE,cAAe,OACfC,eAAgB,UAChBC,SAAU,UACVH,UAAW,UACXI,cAAe,UACfC,UAAW,oBACXC,aAAc,MACdC,SAAS,UAAD,OAbS,oBAaT,yCAZY,MAYZ,yDAIRC,aAAc,UACdC,qBAAsB,UACtBC,YAAa,UAEbC,OAAQ,UACRC,WAAY,UACZC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,KAAM,W,0PCtBR,IAAMC,EAAYC,UAAOC,MAAV,KAEH,SAAAvB,GAAK,OAAIA,EAAMC,MAAMQ,aACd,SAAAT,GAAK,OAAIA,EAAMC,MAAMS,gBAClB,SAAAV,GAAK,OAAIA,EAAMC,MAAMC,WA8B5BsB,EAxBD,SAAC,GAAD,IACZC,EADY,EACZA,YADY,IAEZC,gBAFY,SAGZC,EAHY,EAGZA,MACAC,EAJY,EAIZA,SAJY,IAKZC,YALY,MAKL,OALK,SAOZ,kBAACR,EAAD,CACEI,YAAaA,EACbC,SAAUA,EACVC,MAAOA,EACPC,SAAUA,EACVC,KAAMA,K,4PCtBV,IAAMR,EAAYC,UAAOQ,OAAV,KAGI,SAAA9B,GAAK,OAAIA,EAAMC,MAAMS,gBAGlB,SAAAV,GAAK,OAAIA,EAAMC,MAAMG,aAY5B2B,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,kBAAC,EAAD,KAAYA,I,u2BCXzC,IAAMC,EAAUX,UAAOY,IAAV,KAQPC,EAAMb,UAAOY,IAAV,KACL,SAAAlC,GAAK,OAAIA,EAAMC,MAAMU,YAMnByB,EAAed,kBAAOa,EAAPb,CAAH,KAKZe,EAAOf,UAAOgB,KAAV,KACC,SAAAtC,GAAK,OAAIA,EAAMC,MAAMG,aAI1BmC,EAAOjB,kBAAOa,EAAPb,CAAH,KAkBK,kBACbkB,EADa,EACbA,OACAC,EAFa,EAEbA,SACAC,EAHa,EAGbA,UACAC,EAJa,EAIbA,SACAC,EALa,EAKbA,MACAC,EANa,EAMbA,UACAC,EAPa,EAObA,SACAC,EARa,EAQbA,OARa,OAUb,kBAACd,EAAD,KACE,kBAACM,EAAD,KACc,UAAXC,GACC,0BAAMM,SAAUA,GACd,kBAAC,EAAD,eAAOrB,YAAa,SAAamB,EAAjC,CAAwCf,KAAK,WAC7C,kBAAC,EAAD,CAAQG,KAAM,YAGN,WAAXQ,GACC,0BAAMM,SAAUA,GACd,kBAAC,EAAD,eAAOrB,YAAa,cAAkBiB,IACtC,kBAAC,EAAD,eAAOjB,YAAa,aAAiBkB,IACrC,kBAAC,EAAD,eAAOlB,YAAa,SAAamB,EAAjC,CAAwCf,KAAK,WAC7C,kBAAC,EAAD,eAAOJ,YAAa,YAAgBgB,IACpC,kBAAC,EAAD,CAAQT,KAAM,aAGN,YAAXQ,GACC,0BAAMM,SAAUA,GACd,kBAAC,EAAD,eAAOrB,YAAY,oBAAoBC,UAAQ,GAAKqB,IACpD,kBAAC,EAAD,CAAQf,KAAM,cAKR,YAAXQ,GACC,kBAACJ,EAAD,KACc,UAAXI,EACC,6DACyB,IACvB,kBAACH,EAAD,CAAMW,QAAS,kBAAMH,EAAU,YAA/B,YAGF,uDACmB,IACjB,kBAACR,EAAD,CAAMW,QAAS,kBAAMH,EAAU,WAA/B,cC3FG,WAAAI,GAAiB,IAAD,EACHC,mBAASD,GADN,mBACtBtB,EADsB,KACfwB,EADe,KAU7B,MAAO,CAAExB,QAAOC,SAPC,SAAAwB,GAAM,IAETzB,EACRyB,EADFC,OAAU1B,MAEZwB,EAASxB,M,y0BCPN,IAAM2B,EAASC,YAAH,KAMNC,EAAiBD,YAAH,KAgBdE,EAAiBF,YAAH,KAMdG,EAAeH,YAAH,KC7BVI,ECWA,WAAO,IAAD,EACST,mBAAS,SADlB,mBACZV,EADY,KACJK,EADI,KAEbJ,EAAWmB,EAAS,UACpBlB,EAAYkB,EAAS,UACrBjB,EAAWiB,EAAS,gBACpBb,EAASa,EAAS,IAClBhB,EAAQgB,EAAS,0BANJ,EAOaC,YAAYP,EAAQ,CAClDQ,UAAW,CAAElB,MAAOA,EAAMjB,SADrBoC,EAPY,sBAUaF,YAAYL,EAAgB,CAC1DM,UAAW,CACTlB,MAAOA,EAAMjB,MACbc,SAAUA,EAASd,MACnBe,UAAWA,EAAUf,MACrBgB,SAAUA,EAAShB,SALhBqC,EAVY,sBAkBaH,YAAYJ,EAAgB,CAC1DK,UAAW,CACTlB,MAAOA,EAAMjB,MACboB,OAAQA,EAAOpB,SAHZsC,EAlBY,sBAwBUJ,YAAYH,GAAlCQ,EAxBY,oBAyFnB,OACE,kBAACC,EAAD,CACEtB,UAAWA,EACXL,OAAQA,EACRC,SAAUA,EACVC,UAAWA,EACXC,SAAUA,EACVC,MAAOA,EACPG,OAAQA,EACRD,SAxEa,SAAMM,GAAN,qBAAAgB,EAAAC,OAAA,mDACfjB,EAAEkB,iBACa,UAAX9B,EAFW,oBAGO,KAAhBI,EAAMjB,MAHG,4CAAAyC,EAAA,MAOCL,KAPD,kBAMPQ,KAAQC,eAMRC,IAAMC,QAAQ,0CACd7B,EAAU,aAJV4B,IAAME,MAAM,4CACZC,YAAW,kBAAM/B,EAAU,YAAW,MAV/B,kDAgBTgC,QAAQC,IAAR,MAhBS,gCAmBXL,IAAME,MAAM,qBAnBD,mCAqBO,WAAXnC,EArBI,oBAuBK,KAAhBI,EAAMjB,OACa,KAAnBc,EAASd,OACW,KAApBe,EAAUf,OACS,KAAnBgB,EAAShB,MA1BE,8CAAAyC,EAAA,MA+BCJ,KA/BD,mBA8BPO,KAAQQ,eAKRN,IAAMC,QAAQ,+BACdE,YAAW,kBAAM/B,EAAU,WAAU,MAHrC4B,IAAME,MAAM,wBAjCL,mDAuCTF,IAAME,MAAM,KAAEK,SAvCL,gCA0CXP,IAAME,MAAM,0BA1CD,mCA4CO,YAAXnC,EA5CI,oBA6CQ,KAAjBO,EAAOpB,MA7CE,8CAAAyC,EAAA,MAiDCH,KAjDD,oBAgDgBgB,EAhDhB,EAgDPV,KAAQW,cAEVL,QAAQC,IAAIG,GACE,KAAVA,QAA0BE,IAAVF,EAnDX,iBAoDPf,EAAmB,CAAEJ,UAAW,CAAEmB,WApD3B,8BAsDDG,QAtDC,2DAyDTX,IAAME,MAAM,mCAzDH,6E,wUCpCnB,IAAMU,EAAO/D,UAAOY,IAAV,KAMM,SAAAlC,GAAK,OAAIA,EAAMC,MAAMc,UAG/BuE,EAAOhE,UAAOY,IAAV,KAMK,qBACb,oCACE,kBAACmD,EAAD,KACE,kBAACC,EAAD,KACE,uECfFC,GAAiB,kBACrB,oCACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWL,OAI/BM,GAAkB,kBACtB,oCACE,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,IAAIC,UAAWE,MAgBtBC,GAZG,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAASA,EAAa,kBAAC,GAAD,MAAqB,kBAAC,GAAD,S,+PCXjD,IAAMC,GAAQxC,YAAH,MAMLtB,GAAUX,UAAOY,IAAV,MChBA8D,GAAW,CACtBF,WAAYG,QAAQC,aAAaC,QAAQ,YAAa,GAG3CC,GAAY,CACvBC,SAAU,CACRC,UAAW,SAACC,EAAD,KAA8B,IAAxBtB,EAAuB,EAAvBA,MAAWuB,EAAY,EAAZA,MAO1B,OANAN,aAAaO,QAAQ,QAASxB,GAC9BuB,EAAME,UAAU,CACdnC,KAAM,CACJuB,YAAY,KAGT,MAETa,WAAY,SAACJ,EAAGK,EAAJ,GAAsB,EAAZJ,MAGpB,OAFAN,aAAaW,WAAW,SACxBC,OAAOC,SAAW,IACX,QCfE,OAAIC,IAAa,CAC9BC,IAAK,6BACLC,YAAa,CACXlB,YACAI,gB,SCDJe,IAASC,OACP,kBAAC,KAAD,CAAgBC,OAAQA,IACtB,mBHeW,WAAO,IAEVvB,EACNwB,YAASvB,IADXxB,KAAQuB,WAEV,OACE,kBAAC,gBAAD,CAAe7F,MAAOsH,GACpB,kBAAC,GAAD,KACE,kBAACC,EAAD,MACA,kBAACC,GAAD,CAAQ3B,WAAYA,IAEpB,kBAAC,IAAD,CAAgB4B,SAAUjD,IAAMkD,SAASC,kBGzB7C,OAEFC,SAASC,eAAe,W","file":"static/js/main.77c32b1a.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nexport default createGlobalStyle`\n    ${reset};\n    @import url('https://fonts.googleapis.com/css?family=Open+Sans:400,600,700');\n    * {\n        box-sizing:border-box;\n    }\n    body {\n        background-color:${props => props.theme.bgColor};\n        color:${props => props.theme.blackColor};\n        font-size:14px;\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    }\n    a {\n        color:${props => props.theme.blueColor};\n        text-decoration:none;\n    }\n    input:focus{\n        outline:none;\n    }\n`;\n","const BOX_BORDER = '1px solid #e6e6e6';\nconst BORDER_RADIUS = '4px';\n\nexport default {\n  bgColor: '#FAFAFA',\n  blackColor: '#262626',\n  darkGreyColor: '#999',\n  lightGreyColor: '#c7c7c7',\n  redColor: '#ED4956',\n  blueColor: '#3897f0',\n  darkBlueColor: '#003569',\n  boxBorder: '1px solid #e6e6e6',\n  borderRadius: '4px',\n  whiteBox: `border:${BOX_BORDER};\n             border-radius:${BORDER_RADIUS};\n             background-color:white;\n            `,\n  primaryColor: '#65676B',\n  primaryColorInverted: '#ff9d76',\n  ActiveColor: '#1877F2',\n\n  INDIGO: '#3f51b5',\n  DEEPORANGE: '#3f51b5',\n  AMBER: '#3f51b5',\n  PURPLE: '#3f51b5',\n  BLUE: '#3f51b5',\n  TEAL: '#3f51b5',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.input`\n  border: 0;\n  border: ${props => props.theme.boxBorder};\n  border-radius: ${props => props.theme.borderRadius};\n  background-color: ${props => props.theme.bgColor};\n  height: 35px;\n  font-size: 12px;\n  padding: 0px 15px;\n`;\n\nconst Input = ({\n  placeholder,\n  required = true,\n  value,\n  onChange,\n  type = 'text',\n}) => (\n  <Container\n    placeholder={placeholder}\n    required={required}\n    value={value}\n    onChange={onChange}\n    type={type}\n  />\n);\n\nInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  type: PropTypes.string,\n};\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.button`\n  width: 100%;\n  border: 0;\n  border-radius: ${props => props.theme.borderRadius};\n  color: white;\n  font-weight: 600;\n  background-color: ${props => props.theme.blueColor};\n  text-align: center;\n  padding: 7px 0px;\n  font-size: 14px;\n`;\n\nconst Button = ({ text }) => <Container>{text}</Container>;\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Input from '../../Components/Input';\nimport Button from '../../Components/Button';\n\nconst Wrapper = styled.div`\n  min-height: 80vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst Box = styled.div`\n  ${props => props.theme.whiteBox}\n  border-radius:0px;\n  width: 100%;\n  max-width: 350px;\n`;\n\nconst StateChanger = styled(Box)`\n  text-align: center;\n  padding: 20px 0px;\n`;\n\nconst Link = styled.span`\n  color: ${props => props.theme.blueColor};\n  cursor: pointer;\n`;\n\nconst Form = styled(Box)`\n  padding: 40px;\n  padding-bottom: 30px;\n  margin-bottom: 15px;\n  form {\n    width: 100%;\n    input {\n      width: 100%;\n      &:not(:last-child) {\n        margin-bottom: 7px;\n      }\n    }\n    button {\n      margin-top: 10px;\n    }\n  }\n`;\n\nexport default ({\n  action,\n  userName,\n  firstName,\n  lastName,\n  email,\n  setAction,\n  onSubmit,\n  secret,\n}) => (\n  <Wrapper>\n    <Form>\n      {action === 'logIn' && (\n        <form onSubmit={onSubmit}>\n          <Input placeholder={'Email'} {...email} type=\"email\" />\n          <Button text={'Log in'} />\n        </form>\n      )}\n      {action === 'signUp' && (\n        <form onSubmit={onSubmit}>\n          <Input placeholder={'First name'} {...firstName} />\n          <Input placeholder={'Last name'} {...lastName} />\n          <Input placeholder={'Email'} {...email} type=\"email\" />\n          <Input placeholder={'userName'} {...userName} />\n          <Button text={'Sign up'} />\n        </form>\n      )}\n      {action === 'confirm' && (\n        <form onSubmit={onSubmit}>\n          <Input placeholder=\"Paste your secret\" required {...secret} />\n          <Button text={'Confirm'} />\n        </form>\n      )}\n    </Form>\n\n    {action !== 'confirm' && (\n      <StateChanger>\n        {action === 'logIn' ? (\n          <>\n            Don't have an account?{' '}\n            <Link onClick={() => setAction('signUp')}>Sign up</Link>\n          </>\n        ) : (\n          <>\n            Have an account?{' '}\n            <Link onClick={() => setAction('logIn')}>Log in</Link>\n          </>\n        )}\n      </StateChanger>\n    )}\n  </Wrapper>\n);\n","import { useState } from 'react';\n\nexport default defaultValue => {\n  const [value, setValue] = useState(defaultValue);\n\n  const onChange = e => {\n    const {\n      target: { value },\n    } = e;\n    setValue(value);\n  };\n\n  return { value, onChange };\n};\n","import { gql } from 'apollo-boost';\n\nexport const LOG_IN = gql`\n  mutation requestSecret($email: String!) {\n    requestSecret(email: $email)\n  }\n`;\n\nexport const CREATE_ACCOUNT = gql`\n  mutation createAccount(\n    $userName: String!\n    $email: String!\n    $firstName: String\n    $lastName: String\n  ) {\n    createAccount(\n      userName: $userName\n      email: $email\n      firstName: $firstName\n      lastName: $lastName\n    )\n  }\n`;\n\nexport const CONFIRM_SECRET = gql`\n  mutation confirmSecret($secret: String!, $email: String!) {\n    confirmSecret(secret: $secret, email: $email)\n  }\n`;\n\nexport const LOCAL_LOG_IN = gql`\n  mutation logUserIn($token: String!) {\n    logUserIn(token: $token) @client\n  }\n`;\n","import AuthContainer from './AuthContainer';\nexport default AuthContainer;\n","import React, { useState } from 'react';\nimport AuthPresenter from './AuthPresenter';\nimport useInput from '../../Hooks/useInput';\nimport { useMutation } from 'react-apollo-hooks';\nimport {\n  LOG_IN,\n  CREATE_ACCOUNT,\n  CONFIRM_SECRET,\n  LOCAL_LOG_IN,\n} from './AuthQueries';\nimport { toast } from 'react-toastify';\n\nexport default () => {\n  const [action, setAction] = useState('logIn');\n  const userName = useInput('한');\n  const firstName = useInput('한');\n  const lastName = useInput('지훈');\n  const secret = useInput('');\n  const email = useInput('abhidhamma91@gmail.com');\n  const [requestSecretMutation] = useMutation(LOG_IN, {\n    variables: { email: email.value },\n  });\n  const [createAccountMutation] = useMutation(CREATE_ACCOUNT, {\n    variables: {\n      email: email.value,\n      userName: userName.value,\n      firstName: firstName.value,\n      lastName: lastName.value,\n    },\n  });\n  const [confirmSecretMutation] = useMutation(CONFIRM_SECRET, {\n    variables: {\n      email: email.value,\n      secret: secret.value,\n    },\n  });\n  const [localLogInMutation] = useMutation(LOCAL_LOG_IN);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (action === 'logIn') {\n      if (email.value !== '') {\n        try {\n          const {\n            data: { requestSecret },\n          } = await requestSecretMutation();\n          if (!requestSecret) {\n            toast.error('You dont have an account yet, create one');\n            setTimeout(() => setAction('signUp'), 3000);\n          } else {\n            toast.success('Check your inbox for your login secret');\n            setAction('confirm');\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      } else {\n        toast.error('Email is required');\n      }\n    } else if (action === 'signUp') {\n      if (\n        email.value !== '' &&\n        userName.value !== '' &&\n        firstName.value !== '' &&\n        lastName.value !== ''\n      ) {\n        try {\n          const {\n            data: { createAccount },\n          } = await createAccountMutation();\n          if (!createAccount) {\n            toast.error(\"Can't create account\");\n          } else {\n            toast.success('Account created! Log In now');\n            setTimeout(() => setAction('logIn'), 3000);\n          }\n        } catch (e) {\n          toast.error(e.message);\n        }\n      } else {\n        toast.error('All field are required');\n      }\n    } else if (action === 'confirm') {\n      if (secret.value !== '') {\n        try {\n          const {\n            data: { confirmSecret: token },\n          } = await confirmSecretMutation();\n          console.log(token);\n          if (token !== '' && token !== undefined) {\n            localLogInMutation({ variables: { token } });\n          } else {\n            throw Error();\n          }\n        } catch {\n          toast.error('Cant confirm secret,check again');\n        }\n      }\n    }\n  };\n\n  return (\n    <AuthPresenter\n      setAction={setAction}\n      action={action}\n      userName={userName}\n      firstName={firstName}\n      lastName={lastName}\n      email={email}\n      secret={secret}\n      onSubmit={onSubmit}\n    />\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nconst Feed = styled.div`\n  display: grid;\n  width: 100vw;\n  height: 100vh;\n  align-self: center;\n  justify-self: center;\n  background: ${props => props.theme.INDIGO};\n`;\n\nconst Text = styled.div`\n  color: white;\n  align-self: center;\n  justify-self: center;\n`;\n\nexport default () => (\n  <>\n    <Feed>\n      <Text>\n        <h1>로그인성공^-^//</h1>\n      </Text>\n    </Feed>\n  </>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from '../Routes/Auth';\nimport Feed from '../Routes/Feed';\n\nconst LoggedInRoutes = () => (\n  <>\n    <Route exact path=\"/\" component={Feed} />\n  </>\n);\n\nconst LoggedOutRoutes = () => (\n  <>\n    <Route exact path=\"/\" component={Auth} />\n  </>\n);\n\nconst AppRouter = ({ isLoggedIn }) => {\n  return (\n    <Router>\n      <Switch>{isLoggedIn ? <LoggedInRoutes /> : <LoggedOutRoutes />}</Switch>\n    </Router>\n  );\n};\n\nAppRouter.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport { gql } from 'apollo-boost';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { useQuery } from 'react-apollo-hooks';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport GlobalStyles from '../Styles/GlobalStyles';\nimport Theme from '../Styles/Theme';\nimport Router from './Router';\n\nconst QUERY = gql`\n  {\n    isLoggedIn @client\n  }\n`;\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  max-width: 935px;\n  width: 100vw;\n  display: grid;\n`;\n\nexport default () => {\n  const {\n    data: { isLoggedIn },\n  } = useQuery(QUERY);\n  return (\n    <ThemeProvider theme={Theme}>\n      <Wrapper>\n        <GlobalStyles />\n        <Router isLoggedIn={isLoggedIn} />\n\n        <ToastContainer position={toast.POSITION.BOTTOM_LEFT} />\n      </Wrapper>\n    </ThemeProvider>\n  );\n};\n","export const defaults = {\n  isLoggedIn: Boolean(localStorage.getItem('token')) || false,\n};\n\nexport const resolvers = {\n  Mutation: {\n    logUserIn: (_, { token }, { cache }) => {\n      localStorage.setItem('token', token);\n      cache.writeData({\n        data: {\n          isLoggedIn: true,\n        },\n      });\n      return null;\n    },\n    logUserOut: (_, __, { cache }) => {\n      localStorage.removeItem('token');\n      window.location = '/';\n      return null;\n    },\n  },\n};\n","import ApolloClient from 'apollo-boost';\nimport { defaults, resolvers } from './LocalState';\n\nexport default new ApolloClient({\n  uri: 'http://118.43.222.83:4000/',\n  clientState: {\n    defaults,\n    resolvers,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport client from './Apollo/Client';\nimport { ApolloProvider } from 'react-apollo-hooks';\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}