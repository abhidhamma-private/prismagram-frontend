{"version":3,"sources":["Styles/GlobalStyles.js","Styles/Theme.js","Components/Input.js","Components/Button.js","Routes/Auth/AuthPresenter.js","Hooks/useInput.js","Routes/Auth/AuthQueries.js","Routes/Auth/index.js","Routes/Auth/AuthContainer.js","Routes/Feed.js","Components/Router.js","Components/Footer.js","Components/App.js","Apollo/LocalState.js","Apollo/Client.js","index.js"],"names":["createGlobalStyle","reset","props","theme","bgColor","blackColor","blueColor","darkGreyColor","lightGreyColor","redColor","darkBlueColor","boxBorder","borderRadius","whiteBox","Container","styled","input","Input","placeholder","required","value","onChange","type","button","Button","text","Wrapper","div","Box","StateChanger","Link","span","Form","action","username","firstName","lastName","email","setAction","onSubmit","secret","onClick","defaultValue","useState","setValue","e","target","LOG_IN","gql","CREATE_ACCOUNT","AuthContainer","useInput","useMutation","variables","requestSecretMutation","createAccountMutation","AuthPresenter","a","async","preventDefault","data","requestSecret","toast","success","error","setTimeout","createAccount","message","LoggedInRoutes","exact","path","component","Feed","LoggedOutRoutes","Auth","AppRouter","isLoggedIn","Footer","footer","List","ul","ListItem","li","Copyright","href","Date","getFullYear","QUERY","defaults","Boolean","localStorage","getItem","resolvers","Mutation","logUserIn","_","token","cache","setItem","writeData","logUserOut","__","removeItem","window","location","ApolloClient","uri","process","SERVER_URI","clientState","ReactDOM","render","client","useQuery","Theme","GlobalStyles","Router","position","POSITION","BOTTOM_LEFT","document","getElementById"],"mappings":"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","file":"static/js/main.06abc5b4.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nexport default createGlobalStyle`\r\n    ${reset};\r\n    @import url('https://fonts.googleapis.com/css?family=Open+Sans:400,600,700');\r\n    * {\r\n        box-sizing:border-box;\r\n    }\r\n    body {\r\n        background-color:${props => props.theme.bgColor};\r\n        color:${props => props.theme.blackColor};\r\n        font-size:14px;\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    }\r\n    a {\r\n        color:${props => props.theme.blueColor};\r\n        text-decoration:none;\r\n    }\r\n    input:focus{\r\n        outline:none;\r\n    }\r\n`;\r\n","const BOX_BORDER = '1px solid #e6e6e6';\r\nconst BORDER_RADIUS = '4px';\r\n\r\nexport default {\r\n  bgColor: '#FAFAFA',\r\n  blackColor: '#262626',\r\n  darkGreyColor: '#999',\r\n  lightGreyColor: '#c7c7c7',\r\n  redColor: '#ED4956',\r\n  blueColor: '#3897f0',\r\n  darkBlueColor: '#003569',\r\n  boxBorder: '1px solid #e6e6e6',\r\n  borderRadius: '4px',\r\n  whiteBox: `border:${BOX_BORDER};\r\n             border-radius:${BORDER_RADIUS};\r\n             background-color:white;\r\n            `,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.input`\r\n  border: 0;\r\n  border: ${props => props.theme.boxBorder};\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  background-color: ${props => props.theme.bgColor};\r\n  height: 35px;\r\n  font-size: 12px;\r\n  padding: 0px 15px;\r\n`;\r\n\r\nconst Input = ({\r\n  placeholder,\r\n  required = true,\r\n  value,\r\n  onChange,\r\n  type = 'text',\r\n}) => (\r\n  <Container\r\n    placeholder={placeholder}\r\n    required={required}\r\n    value={value}\r\n    onChange={onChange}\r\n    type={type}\r\n  />\r\n);\r\n\r\nInput.propTypes = {\r\n  placeholder: PropTypes.string.isRequired,\r\n  required: PropTypes.bool,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = styled.button`\r\n  width: 100%;\r\n  border: 0;\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  color: white;\r\n  font-weight: 600;\r\n  background-color: ${props => props.theme.blueColor};\r\n  text-align: center;\r\n  padding: 7px 0px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Button = ({ text }) => <Container>{text}</Container>;\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Input from '../../Components/Input';\r\nimport Button from '../../Components/Button';\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 80vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  ${props => props.theme.whiteBox}\r\n  border-radius:0px;\r\n  width: 100%;\r\n  max-width: 350px;\r\n`;\r\n\r\nconst StateChanger = styled(Box)`\r\n  text-align: center;\r\n  padding: 20px 0px;\r\n`;\r\n\r\nconst Link = styled.span`\r\n  color: ${props => props.theme.blueColor};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Form = styled(Box)`\r\n  padding: 40px;\r\n  padding-bottom: 30px;\r\n  margin-bottom: 15px;\r\n  form {\r\n    width: 100%;\r\n    input {\r\n      width: 100%;\r\n      &:not(:last-child) {\r\n        margin-bottom: 7px;\r\n      }\r\n    }\r\n    button {\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ({\r\n  action,\r\n  username,\r\n  firstName,\r\n  lastName,\r\n  email,\r\n  setAction,\r\n  onSubmit,\r\n  secret,\r\n}) => (\r\n  <Wrapper>\r\n    <Form>\r\n      {action === 'logIn' && (\r\n        <form onSubmit={onSubmit}>\r\n          <Input placeholder={'Email'} {...email} type=\"email\" />\r\n          <Button text={'Log in'} />\r\n        </form>\r\n      )}\r\n      {action === 'signUp' && (\r\n        <form onSubmit={onSubmit}>\r\n          <Input placeholder={'First name'} {...firstName} />\r\n          <Input placeholder={'Last name'} {...lastName} />\r\n          <Input placeholder={'Email'} {...email} type=\"email\" />\r\n          <Input placeholder={'Username'} {...username} />\r\n          <Button text={'Sign up'} />\r\n        </form>\r\n      )}\r\n      {action === 'confirm' && (\r\n        <form onSubmit={onSubmit}>\r\n          <Input placeholder=\"Paste your secret\" required {...secret} />\r\n          <Button text={'Confirm'} />\r\n        </form>\r\n      )}\r\n    </Form>\r\n    <StateChanger>\r\n      {action === 'logIn' ? (\r\n        <>\r\n          Don't have an account?{' '}\r\n          <Link onClick={() => setAction('signUp')}>Sign up</Link>\r\n        </>\r\n      ) : (\r\n        <>\r\n          Have an account?{' '}\r\n          <Link onClick={() => setAction('logIn')}>Log in</Link>\r\n        </>\r\n      )}\r\n    </StateChanger>\r\n  </Wrapper>\r\n);\r\n","import { useState } from 'react';\r\n\r\nexport default defaultValue => {\r\n  const [value, setValue] = useState(defaultValue);\r\n\r\n  const onChange = e => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setValue(value);\r\n  };\r\n\r\n  return { value, onChange };\r\n};\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const LOG_IN = gql`\r\n  mutation requestSecret($email: String!) {\r\n    requestSecret(email: $email)\r\n  }\r\n`;\r\n\r\nexport const CREATE_ACCOUNT = gql`\r\n  mutation createAccount(\r\n    $username: String!\r\n    $email: String!\r\n    $firstName: String\r\n    $lastName: String\r\n  ) {\r\n    createAccount(\r\n      username: $username\r\n      email: $email\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n    )\r\n  }\r\n`;\r\n","import AuthContainer from './AuthContainer';\r\nexport default AuthContainer;\r\n","import React, { useState } from 'react';\r\nimport AuthPresenter from './AuthPresenter';\r\nimport useInput from '../../Hooks/useInput';\r\nimport { useMutation } from 'react-apollo-hooks';\r\nimport { LOG_IN, CREATE_ACCOUNT } from './AuthQueries';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default () => {\r\n  const [action, setAction] = useState('logIn');\r\n  const username = useInput('');\r\n  const firstName = useInput('');\r\n  const lastName = useInput('');\r\n  const secret = useInput('');\r\n  const email = useInput('itnico.las.me@gmail.com');\r\n  const [requestSecretMutation] = useMutation(LOG_IN, {\r\n    variables: { email: email.value },\r\n  });\r\n  const [createAccountMutation] = useMutation(CREATE_ACCOUNT, {\r\n    variables: {\r\n      email: email.value,\r\n      username: username.value,\r\n      firstName: firstName.value,\r\n      lastName: lastName.value,\r\n    },\r\n  });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (action === 'logIn') {\r\n      if (email.value !== '') {\r\n        try {\r\n          const {\r\n            data: { requestSecret },\r\n          } = await requestSecretMutation();\r\n          if (!requestSecret) {\r\n            toast.error('You dont have an account yet, create one');\r\n            setTimeout(() => setAction('signUp'), 3000);\r\n          } else {\r\n            toast.success('Check your inbox for your login secret');\r\n            setAction('confirm');\r\n          }\r\n        } catch {\r\n          toast.error(\"Can't request secret, try again\");\r\n        }\r\n      } else {\r\n        toast.error('Email is required');\r\n      }\r\n    } else if (action === 'signUp') {\r\n      if (\r\n        email.value !== '' &&\r\n        username.value !== '' &&\r\n        firstName.value !== '' &&\r\n        lastName.value !== ''\r\n      ) {\r\n        try {\r\n          const {\r\n            data: { createAccount },\r\n          } = await createAccountMutation();\r\n          if (!createAccount) {\r\n            toast.error(\"Can't create account\");\r\n          } else {\r\n            toast.success('Account created! Log In now');\r\n            setTimeout(() => setAction('logIn'), 3000);\r\n          }\r\n        } catch (e) {\r\n          toast.error(e.message);\r\n        }\r\n      } else {\r\n        toast.error('All field are required');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthPresenter\r\n      setAction={setAction}\r\n      action={action}\r\n      username={username}\r\n      firstName={firstName}\r\n      lastName={lastName}\r\n      email={email}\r\n      secret={secret}\r\n      onSubmit={onSubmit}\r\n    />\r\n  );\r\n};\r\n","export default () => 'feed';\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from '../Routes/Auth';\r\nimport Feed from '../Routes/Feed';\r\n\r\nconst LoggedInRoutes = () => (\r\n  <>\r\n    <Route exact path=\"/\" component={Feed} />\r\n  </>\r\n);\r\n\r\nconst LoggedOutRoutes = () => (\r\n  <>\r\n    <Route exact path=\"/\" component={Auth} />\r\n  </>\r\n);\r\n\r\nconst AppRouter = ({ isLoggedIn }) => {\r\n  return (\r\n    <Router>\r\n      <Switch>{isLoggedIn ? <LoggedInRoutes /> : <LoggedOutRoutes />}</Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nAppRouter.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Footer = styled.footer`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  &:not(:last-child) {\r\n    margin-right: 16px;\r\n  }\r\n`;\r\n\r\nconst Link = styled.a`\r\n  color: ${props => props.theme.darkBlueColor};\r\n`;\r\n\r\nconst Copyright = styled.span`\r\n  color: ${props => props.theme.darkGreyColor};\r\n`;\r\n\r\nexport default () => (\r\n  <Footer>\r\n    <List>\r\n      <ListItem>\r\n        <Link href=\"#\">about us</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">support</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">press</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">api</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">jobs</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">privacy</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">terms</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">directory</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">profiles</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">hashtags</Link>\r\n      </ListItem>\r\n      <ListItem>\r\n        <Link href=\"#\">language</Link>\r\n      </ListItem>\r\n    </List>\r\n    <Copyright>Instaclone {new Date().getFullYear()} &copy;</Copyright>\r\n  </Footer>\r\n);\r\n","import React from 'react';\nimport { gql } from 'apollo-boost';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { useQuery } from 'react-apollo-hooks';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport GlobalStyles from '../Styles/GlobalStyles';\nimport Theme from '../Styles/Theme';\nimport Router from './Router';\nimport Footer from './Footer';\n\nconst QUERY = gql`\n  {\n    isLoggedIn @client\n  }\n`;\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  max-width: 935px;\n  width: 100%;\n`;\n\nexport default () => {\n  const {\n    data: { isLoggedIn },\n  } = useQuery(QUERY);\n  return (\n    <ThemeProvider theme={Theme}>\n      <Wrapper>\n        <GlobalStyles />\n        <Router isLoggedIn={isLoggedIn} />\n        <Footer />\n        <ToastContainer position={toast.POSITION.BOTTOM_LEFT} />\n      </Wrapper>\n    </ThemeProvider>\n  );\n};\n","export const defaults = {\r\n  isLoggedIn: Boolean(localStorage.getItem('token')) || false,\r\n};\r\n\r\nexport const resolvers = {\r\n  Mutation: {\r\n    logUserIn: (_, { token }, { cache }) => {\r\n      localStorage.setItem('token', token);\r\n      cache.writeData({\r\n        data: {\r\n          isLoggedIn: true,\r\n        },\r\n      });\r\n      return null;\r\n    },\r\n    logUserOut: (_, __, { cache }) => {\r\n      localStorage.removeItem('token');\r\n      window.location = '/';\r\n      return null;\r\n    },\r\n  },\r\n};\r\n","import ApolloClient from 'apollo-boost';\r\nimport { defaults, resolvers } from './LocalState';\r\n\r\nexport default new ApolloClient({\r\n  uri: process.env.SERVER_URI,\r\n  clientState: {\r\n    defaults,\r\n    resolvers,\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport client from './Apollo/Client';\nimport { ApolloProvider } from 'react-apollo-hooks';\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}